to regenerate keys run wfb_keygn
drone.key should be renamed to tx.key
gs.key should be renamed to rx.key

setup_adapter.sh is for setting up the wifi adapter

find this ID via "ls -l /dev/v4l/by-id/"
/dev/v4l/by-id/usb-MACROSILICON_USB3_Video_67720542-video-index0

SOFTWARE READ
ffmpeg -f v4l2 -input_format yuyv422 -video_size 1920x1080 -framerate 30 -i /dev/v4l/by-id/usb-MACROSILICON_USB3_Video_67720542-video-index0 -c:v libx264  -t 20 hw_capture_test.mp4

ffmpeg -f v4l2 -input_format yuyv422 -video_size 1920x1080 -framerate 30 -i /dev/v4l/by-id/usb-MACROSILICON_USB3_Video_67720542-video-index0 -c:v h264_v4l2m2m -b:v 6M -t 20 hw_capture_test.mp4

compressed stream from hardware device, re-encoded for GPU:
ffmpeg -f v4l2 -input_format mjpeg -video_size 1920x1080 -framerate 30 -i /dev/v4l/by-id/usb-MACROSILICON_USB3_Video_67720542-video-index0 -pix_fmt yuv420p -c:v h264_v4l2m2m -b:v 6M -t 20 hw_capture_test.mp4


This has been set up as a service: systemctl status wfb-transmitter.service

Add a service with:
sudo systemctl daemon-reload
sudo systemctl enable hide-cursor@tty1.service
sudo systemctl start hide-cursor@tty1.service


install hidecursor to
/etc/systemd/system/getty@tty1.service.d/hidecursor.conf
On Pi 5, this works:
sudo ffmpeg -probesize 1M -fifo_size 5000000 -overrun_nonfatal 1 -i udp://127.0.0.1:5000 -filter_complex "[0:v]format=rgb565le[out]" -map "[out]" -f fbdev /dev/fb0

THIS WORKED FINAL
sudo ffmpeg -probesize 1M -fifo_size 5000000 -overrun_nonfatal 1 -i udp://127.0.0.1:5000 -vf "format=rgb565le" -f fbdev /dev/fb0
